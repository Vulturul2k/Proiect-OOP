Starting audit...
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\checker\CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:16:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:20:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:20:26: Parameter count should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:24:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:28:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:28:25: Parameter rate should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:32:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:36:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:36:26: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:40:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:44:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:44:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:48:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:52:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:52:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:56:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:60:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:60:28: Parameter feature should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:64:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:68:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:68:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:72:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:76:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:76:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:80:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:84:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Action.java:84:28: Parameter filters should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Contains.java:9:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Contains.java:13:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Contains.java:13:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Contains.java:17:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Contains.java:21:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Contains.java:21:26: Parameter genre should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:15:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:19:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:19:32: Parameter tokensCount should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:23:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:27:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:27:41: Parameter numFreePremiumMovies should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:31:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:35:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:35:36: Parameter purchasedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:39:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:43:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:43:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:47:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:51:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:51:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:55:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:59:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:59:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:63:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:67:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Credentials.java:67:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Filters.java:7:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Filters.java:11:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Filters.java:11:25: Parameter sort should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Filters.java:15:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Filters.java:19:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Filters.java:19:29: Parameter contains should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:10:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:14:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:14:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:18:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:22:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:22:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:26:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:30:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Input.java:30:28: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Movie.java:17:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Movie.java:25:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Movie.java:33:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Movie.java:41:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Movie.java:49:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Movie.java:57:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Sort.java:7:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Sort.java:11:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Sort.java:11:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Sort.java:15:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Sort.java:19:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\Sort.java:19:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:12:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:16:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:16:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:20:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:24:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:24:29: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:28:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:32:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:32:32: Parameter accountType should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:36:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:40:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:40:28: Parameter country should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:44:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:48:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\input\User.java:48:28: Parameter balance should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:1:9: Name 'login_register' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:10:14: Name 'Login_register' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:11:30: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:11:47: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:11:65: Parameter user should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:13:30: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:21:24: Name 'info_users' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:29:23: Name 'movie_info' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:36:23: Name 'movie_info_watch' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:40:23: Name 'movie_info_like' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:44:23: Name 'movie_info_rate' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:49:40: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:52:27: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:52:44: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:65:28: Must have at least one statement. [EmptyBlock]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:75: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\login_register\Login_register.java:76: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\Main.java:10:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\Main.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\Main.java:11:29: Parameter args should be final. [FinalParameters]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\Radu\Documents\tema 2 OOP\proiect1\Proiect-OOP\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 120 errors.
